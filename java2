// ✅ This makes the file a module, required for "declare global"
export {};

// ✅ Add browser speech APIs to TypeScript’s global scope
declare global {
  interface Window {
    webkitSpeechRecognition: any;
    SpeechRecognition: any;
  }
  interface SpeechRecognitionEvent extends Event {
    results: SpeechRecognitionResultList;
  }
}

// 🔤 Phrase-to-GenZ replacements
const phraseMap: Record<string, string> = {
  "good morning": "rise n slay 🌞💅",
  "i don't know": "idk bro 🤷",
  "what are you doing": "wyd 👀",
  "be right back": "brb 🏃💨",
  "i'm tired": "i’m literally done 😮‍💨",
  "let's go": "we up 🔥🙌",
  "how are you": "u vibin'?",
  "i'm fine": "chillin 😌",
  "nothing": "nahh just vibes 🌊",
  "just kidding": "jk lol 😹",
  "no problem": "no cap 😎",
  "i am very busy": "i’m booked n busy 💅📅",
  "that's not fair": "that’s sus 😤",
  "i'm not interested": "miss me with that 🙅",
  "i'm feeling sad": "i'm in my feels 😢",
  "i don't care": "meh 😐",
  "that's so funny": "i'm dead 💀😂",
  "wait a second": "hold up ⏳",
  "i agree": "big facts 🫡",
  "you're right": "frfr 💯",
  "i'm excited": "let’s goo 🔥🔥",
  "that's boring": "lowkey lame 😒",
  "i'm bored": "need some drama fr 😩",
  "talk to you later": "ttyl 🫡",
  "i'm hungry": "need a vibe snack 🍕",
"i don't understand": "bruh i’m lost 🌀",
"i need help": "send backup 🚨",
"i made a mistake": "my bad fr 😬",
"this is amazing": "this slaps 🔥",
"i'm confused": "what’s goin on rn 😵‍💫",
"are you serious": "you deadass rn? 🤨",
"i'm nervous": "got mad butterflies 😰",
"i'm scared": "shooketh 😱",
"that was unexpected": "plot twist fr 🎬",
"i can't believe this": "no wayyy 😮",
"i'm shocked": "i’m shook 😳",
"i’m going to sleep": "i'm clockin out 😴",
"i woke up late": "slept thru my whole life 😵‍💤",
"i feel lazy": "in max chill mode 😌🛋️",
"i’m on my way": "pullin up rn 🚗💨",
"just arrived": "i’m here bestie 🛬",
"that’s impressive": "you ate that 👏",
"let’s hang out": "let’s vibe irl 🎉",
"i’m so happy": "vibes on max 😁✨",
"that’s not okay": "nah that ain’t it chief 🚫",
"please wait": "hold up fr 🕐",
"i’m listening": "spill the tea 🍵👂",
"tell me everything": "drop the whole tea sis ☕️",
"i’m trying my best": "lowkey putting in work 😤",
"you look great": "you’re slayin fr 👑✨",
"you’re annoying": "you extra af 🙄",
"you’re funny": "lol you wildin 🤪",
"don’t worry": "no stress, just vibes 🌈",
"this is bad": "this ain’t it 😬",
"let’s chill": "let’s vibe 🧊",
"let’s take a break": "break time, bestie ✨☕️",
"i'm not okay": "mentally on airplane mode ✈️😩",
"i feel sick": "not vibing physically 🤒",
"i’m in a hurry": "zoomin rn 🚀",
"i like this": "this is a whole vibe 💯",
"don’t forget": "no cap, remember this 🧠",
"what happened": "wyd now?? 😮",
"i miss you": "where you at bestie 🥺",
"call me": "hit my line 📞",
"i’m done": "that’s a wrap ✌️",
"i need a break": "gotta log off fr 📴",
"that’s awesome": "mad respect 🔥",
"what’s going on": "wassup with that 👀",
"everything is fine": "we chillin 😎",
"i’m serious": "i ain’t playin fr 🧢",
"let’s do this": "it’s go time 🕶️",
"this is boring": "this dry af 💀"

};

// 🔤 Word-to-GenZ replacements
const wordMap: Record<string, string> = {
  "work": "the grind 😩",
  "working": "grinding fr 😤",
  "tired": "dead inside 💀",
  "busy": "booked n busy 💅",
  "meeting": "linkup",
  "study": "brain gym 🧠",
  "problem": "it's giving drama 🧃",
  "amazing": "iconic 🔥",
  "congratulations": "slayyy 👑🔥",
  "friend": "bestie 💅",
  "friends": "besties 💅",
  "sad": "in my feels 😔",
  "happy": "vibin ✨",
  "angry": "pressed 💢",
  "okay": "okok slay",
  "ok": "slay",
  "sorry": "my bad 😭",
  "can’t": "nah fam 🙅",
  "cannot": "can’t fr",
  "love": "mad respect ❤️",
  "cool": "drippy 🧊",
  "funny": "i'm dead 💀",
  "late": "running on vibe time ⏰✨",
  "good": "fire 🔥",
  "bad": "sus 😬",
  "yes": "yuhhh",
  "no": "nah",
  "really": "frfr",
  "understand": "gotchu fam ✅",
  "hello": "yo",
  "hi": "heyoo",
  "thanks": "tysm 🙏",
  "homework": "academic pain 📚😩",
  "teacher": "big boss 👩‍🏫",
  "parents": "the ops 🕵️‍♂️",
  "school": "stress camp 🏫",
  "bored": "lowkey dead 😪",
"money": "bag secured 💰",
"rich": "loaded af 💸",
"poor": "broke vibes 😭",
"hungry": "starvin fr 🍔",
"food": "grub 😋",
"sleep": "powering down 😴",
"awesome": "straight vibes 🌈",
"boring": "dry af 💤",
"party": "banger 🔥🎉",
"smart": "big brain 🧠",
"dumb": "no thoughts 🧍‍♂️",
"laugh": "LOL 😂",
"weird": "mad sus 😵",
"selfie": "front cam flex 📸",
"money problem": "wallet crisis 😬",
"school exam": "pain unlocked 😓",
"assignment": "deadline doom ⏳",
"vacation": "outta here ✈️🌴",
"break": "mental reset 🔁",
"hangout": "vibe sesh 🫂",
"wait": "hold up ⏳",
"look": "peep this 👀",
"run": "skrrt 🏃💨",
"fast": "zooming 🚀",
"slow": "snail mode 🐌",
"fail": "flopped 💥",
"win": "W secured 🏆",
"lose": "took an L 😓",
"truth": "no cap 🧢",
"lie": "cappin hard 🧢",
"talk": "spill tea 🍵",
"gossip": "drama dropper 🎭",
"shopping": "retail therapy 🛍️",
"angry face": "heated 🔥😡",
"happy face": "smiling big 😁",
"confused": "lost in the sauce 😵‍💫",
"best friend": "ride or die 👯",
"enemy": "the opps 😤",
"crush": "secret simp 💘",
"beautiful": "slay queen 👑",
"handsome": "looking drippy 😎",
"photo": "pic for the gram 📷",
"video": "vlog vibes 🎥",
"joke": "giggle fuel 🤣",
"meme": "vibe post 🧃",
"music": "beats on 🔊",
"song": "banger track 🎶",
"instagram": "the gram 📸",
"tiktok": "scroll trap 🎵🌀",
"youtube": "vid rabbit hole 📺",
"internet": "the void 🌐",
"phone": "lifeline 📱",
"chat": "texting grind 💬",
"submit the assignment": "drop the heat 🔥📄",
"final exam": "the boss level 💀📚",
"study time": "brain grind 🧠💥",
"i passed": "aced that fr 🎯",
"i failed": "L taken 💀",
"can i go to the bathroom": "need a vibe break 🚽💨",
"back to class": "returning to the battlefield 😤",
"i need to study": "cramming zone activated 😵‍💫",
"let’s do group study": "study squad assemble 💪📖",
"i forgot my homework": "left the pain at home 🧠➡️🏠",
"library": "quiet grind zone 🧘📚",
"i like you": "lowkey got a crush on u 😳❤️",
"i love you": "mad respect + vibes 4 u ❤️✨",
"will you be mine": "u tryna vibe long term? 💍👀",
"you're cute": "ur a whole snack 😋",
"you’re hot": "you got main character energy 🔥",
"wanna hang out": "tryna link up n vibe? 👀",
"let's go on a date": "vibe check over dinner? 🕯️🍝",
"you're mine": "locked u down 🔐💘",
"i miss you": "feelin the void rn 🥺",
"let’s be more than friends": "let’s upgrade the vibes 💞",
"it is what it is": "vibes be vibin 💫",
"life is hard": "the grind never ends 💀",
"i'm tired of everything": "log me out of this sim pls 😩",
"that’s just life": "main character arc unlocked 🎭",
"everything is fine": "this is fine meme energy 🔥🐶",
"don’t take it seriously": "lowkey, chill 😎",
"i need peace": "vibe mode: do not disturb 🧘‍♂️",
"no one understands me": "speaking alien out here 🛸👽",
"trying my best": "hustling in hard mode 🛠️",
"what’s up?": "wyd bestie 👀",
"nothing much": "just vibin 💆‍♂️",
"got it": "say less 🔥",
"are you serious?": "you deadass rn? 🤨",
"i don’t know": "idk lol 🤷",
"i’ll check": "lemme peep real quick 👁️",
"thank you": "tysm 🙏💕",
"see you later": "ttyl bestie 🫡",
"good night": "sleep tight, slay dreams 🌙✨"
};

// 🔁 Main Gen Z translator
function translateToGenZ(): void {
  const inputElement = document.getElementById("inputText") as HTMLTextAreaElement | null;
  const outputElement = document.getElementById("outputText") as HTMLElement | null;

  if (!inputElement || !outputElement) return;

  let input = inputElement.value.toLowerCase();

  // 1️⃣ Replace full phrases
  for (const phrase in phraseMap) {
    const regex = new RegExp(`\\b${phrase}\\b`, 'gi');
    input = input.replace(regex, phraseMap[phrase]);
  }

  // 2️⃣ Replace individual words
  const words = input.split(/\s+/);
  const translatedWords = words.map(word => {
    const punctuation = word.match(/[.,!?]$/);
    const cleanWord = word.replace(/[.,!?]/g, "");

    let translated = cleanWord;

    if (wordMap[cleanWord]) {
      translated = wordMap[cleanWord];
    }

    if (punctuation) {
      translated += punctuation[0];
    }

    return translated;
  });

  outputElement.innerText = translatedWords.join(" ");
}

// 🎤 Voice input
function startListening(): void {
  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

  if (!SpeechRecognition) {
    alert("Voice recognition not supported in this browser.");
    return;
  }

  const recognition = new SpeechRecognition();
  recognition.lang = 'en-US';
  recognition.interimResults = false;
  recognition.maxAlternatives = 1;

  recognition.onresult = (event: SpeechRecognitionEvent) => {
    const transcript = event.results[0][0].transcript;
    const inputBox = document.getElementById("inputText") as HTMLTextAreaElement | null;
    if (inputBox) {
      inputBox.value = transcript;
      translateToGenZ();
    }
  };

  recognition.onerror = (event: any) => {
    alert("Voice input error: " + event.error);
  };

  recognition.start();
}

// 🔊 Voice output
function speakOutput(): void {
  const outputElement = document.getElementById("outputText") as HTMLElement | null;
  if (!outputElement || !outputElement.innerText) return;

  const utterance = new SpeechSynthesisUtterance(outputElement.innerText);
  utterance.lang = 'en-US';
  utterance.rate = 1;
  speechSynthesis.speak(utterance);
}

// Make functions available globally if needed in HTML onclick
(window as any).translateToGenZ = translateToGenZ;
(window as any).startListening = startListening;
(window as any).speakOutput = speakOutput;
